Given an array of integers, find the longest subarray where the absolute difference between any two elements is less than or equal to .

Example


There are two subarrays meeting the criterion:  and . The maximum length subarray has  elements.

Function Description

Complete the pickingNumbers function in the editor below.

pickingNumbers has the following parameter(s):

int a[n]: an array of integers
Returns

int: the length of the longest subarray that meets the criterion
Input Format

The first line contains a single integer , the size of the array .
The second line contains  space-separated integers, each an .



//////////////////////////////////////////////////////////////////////////// SOLUTION ///////////////////////////////////////////////////////////////////////////////////////////////



#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'pickingNumbers' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY a as parameter.
#


////////////////////////////////////////////////////////////////////////////////////////


def pickingNumbers(a):
    # Write your code here
    count=0
    b=[]
    for i in range(0,len(a)):
        
        for j in range(0,len(a)):
            
            if((a[i]==a[j]) or ((a[i]+1)==a[j])):
                count+=1
        
        b.append(count)
        count=0
    
    num=b[0]
    for i in range(0,len(b)):
        if(num<b[i]):
            num=b[i]
    return num
    
                
//////////////////////////////////////////////////////////////////////////////////////////////////////            
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    a = list(map(int, input().rstrip().split()))

    result = pickingNumbers(a)

    fptr.write(str(result) + '\n')

    fptr.close()
